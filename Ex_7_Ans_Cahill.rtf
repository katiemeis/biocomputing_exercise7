{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \ul \ulc0 #1\
#Write a Function that prints the odd rows of a dataframe \
\
i\ulnone mport pandas as pd\
data=pd.read_csv('iris.csv')\
def odd_rows(odd):\
    return(odd[1::2])\
print(odd_rows(data))\
\
\
\ul #2\
\
#return the number of a given species included in the dataset\
\ulnone \
import pandas as pd\
data=pd.read_csv('iris.csv')\
def species_count(banana):\
    species_rows=data[data.Species.str.contains(banana)]\
    return species_rows['Species'].value_counts()\
print(species_count('setosa'))\
\
\
 \
\ul #Return a data frame with flowers with Sepal.width greater than a value specified by a function user\ulnone \
\
\
import pandas as pd\
data=pd.read_csv('iris.csv')\
def observations(orange):\
    sepal_width=data[data['Sepal.Width']>orange]\
    return(sepal_width)\
observations(3)\
#Where 3 can be any number used by the function user\
\
\
\ul #Write the data for a given species to a comma delimited file with a given species name\ulnone  \
\
import pandas as pd\
data=pd.read_csv('iris.csv')\
def species_filemaker(apple):\
    species_rows=data[data.Species.str.contains(apple)]\
    return species_rows.to_csv('%s.csv' % apple)\
species_filemaker('virginica')}